{"id":"../../node_modules/spinal-models-bimobject/build/BIMObject.js","dependencies":[{"name":"/home/spinalcom/Documents/spinal/maintainer/spinal-browser-maintainer/package.json","includedInParent":true,"mtime":1556188313517},{"name":"/home/spinalcom/Documents/spinal/maintainer/node_modules/spinal-models-bimobject/package.json","includedInParent":true,"mtime":1555411428296},{"name":"/home/spinalcom/Documents/spinal/maintainer/node_modules/spinal-models-bimobject/.babelrc","includedInParent":true,"mtime":499162500000},{"name":"spinal-core-connectorjs","loc":{"line":6,"column":27},"parent":"/home/spinalcom/Documents/spinal/maintainer/node_modules/spinal-models-bimobject/build/BIMObject.js","resolved":"/home/spinalcom/Documents/spinal/maintainer/node_modules/spinal-core-connectorjs/lib/spinalcore.node.js"}],"generated":{"js":"var global = arguments[3];\n\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar spinalCore = require(\"spinal-core-connectorjs\");\n\nvar globalType = typeof window === \"undefined\" ? global : window;\n\nvar SpinalBIMObject =\n/*#__PURE__*/\nfunction (_globalType$Model) {\n  _inherits(SpinalBIMObject, _globalType$Model);\n\n  function SpinalBIMObject(_id, _name) {\n    var _this;\n\n    _classCallCheck(this, SpinalBIMObject);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SpinalBIMObject).call(this));\n\n    if (FileSystem._sig_server) {\n      _this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n\n    return _this;\n  }\n\n  return SpinalBIMObject;\n}(globalType.Model);\n\nexports.default = SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);"},"sourceMaps":{"js":{"mappings":[{"source":"../BIMObject.js","name":null,"original":{"line":1,"column":0},"generated":{"line":22,"column":0}},{"source":"../BIMObject.js","name":"spinalCore","original":{"line":1,"column":6},"generated":{"line":22,"column":4}},{"source":"../BIMObject.js","name":"spinalCore","original":{"line":1,"column":6},"generated":{"line":22,"column":14}},{"source":"../BIMObject.js","name":"require","original":{"line":1,"column":19},"generated":{"line":22,"column":17}},{"source":"../BIMObject.js","name":"require","original":{"line":1,"column":19},"generated":{"line":22,"column":24}},{"source":"../BIMObject.js","name":null,"original":{"line":1,"column":27},"generated":{"line":22,"column":25}},{"source":"../BIMObject.js","name":"require","original":{"line":1,"column":19},"generated":{"line":22,"column":50}},{"source":"../BIMObject.js","name":null,"original":{"line":1,"column":0},"generated":{"line":22,"column":51}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":0},"generated":{"line":24,"column":0}},{"source":"../BIMObject.js","name":"globalType","original":{"line":2,"column":6},"generated":{"line":24,"column":4}},{"source":"../BIMObject.js","name":"globalType","original":{"line":2,"column":6},"generated":{"line":24,"column":14}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":19},"generated":{"line":24,"column":17}},{"source":"../BIMObject.js","name":"window","original":{"line":2,"column":26},"generated":{"line":24,"column":24}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":19},"generated":{"line":24,"column":30}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":37},"generated":{"line":24,"column":35}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":19},"generated":{"line":24,"column":46}},{"source":"../BIMObject.js","name":"global","original":{"line":2,"column":51},"generated":{"line":24,"column":49}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":19},"generated":{"line":24,"column":55}},{"source":"../BIMObject.js","name":"window","original":{"line":2,"column":60},"generated":{"line":24,"column":58}},{"source":"../BIMObject.js","name":null,"original":{"line":2,"column":0},"generated":{"line":24,"column":64}},{"source":"../BIMObject.js","name":"SpinalBIMObject","original":{"line":7,"column":6},"generated":{"line":26,"column":4}},{"source":"../BIMObject.js","name":"constructor","original":{"line":8,"column":2},"generated":{"line":31,"column":0}},{"source":"../BIMObject.js","name":"_id","original":{"line":8,"column":14},"generated":{"line":31,"column":27}},{"source":"../BIMObject.js","name":"constructor","original":{"line":8,"column":2},"generated":{"line":31,"column":30}},{"source":"../BIMObject.js","name":"_name","original":{"line":8,"column":19},"generated":{"line":31,"column":32}},{"source":"../BIMObject.js","name":"constructor","original":{"line":8,"column":2},"generated":{"line":31,"column":37}},{"source":"../BIMObject.js","name":null,"original":{"line":8,"column":26},"generated":{"line":31,"column":39}},{"source":"../BIMObject.js","name":null,"original":{"line":8,"column":26},"generated":{"line":32,"column":0}},{"source":"../BIMObject.js","name":null,"original":{"line":8,"column":26},"generated":{"line":34,"column":0}},{"source":"../BIMObject.js","name":null,"original":{"line":9,"column":4},"generated":{"line":36,"column":0}},{"source":"../BIMObject.js","name":null,"original":{"line":10,"column":4},"generated":{"line":38,"column":0}},{"source":"../BIMObject.js","name":"FileSystem","original":{"line":10,"column":8},"generated":{"line":38,"column":8}},{"source":"../BIMObject.js","name":"FileSystem","original":{"line":10,"column":8},"generated":{"line":38,"column":18}},{"source":"../BIMObject.js","name":"_sig_server","original":{"line":10,"column":19},"generated":{"line":38,"column":19}},{"source":"../BIMObject.js","name":null,"original":{"line":10,"column":4},"generated":{"line":38,"column":30}},{"source":"../BIMObject.js","name":null,"original":{"line":10,"column":32},"generated":{"line":38,"column":32}},{"source":"../BIMObject.js","name":null,"original":{"line":11,"column":6},"generated":{"line":39,"column":0}},{"source":"../BIMObject.js","name":"add_attr","original":{"line":11,"column":11},"generated":{"line":39,"column":12}},{"source":"../BIMObject.js","name":null,"original":{"line":11,"column":6},"generated":{"line":39,"column":20}},{"source":"../BIMObject.js","name":null,"original":{"line":11,"column":20},"generated":{"line":39,"column":21}},{"source":"../BIMObject.js","name":"id","original":{"line":12,"column":8},"generated":{"line":40,"column":0}},{"source":"../BIMObject.js","name":"id","original":{"line":12,"column":8},"generated":{"line":40,"column":8}},{"source":"../BIMObject.js","name":"id","original":{"line":12,"column":8},"generated":{"line":40,"column":10}},{"source":"../BIMObject.js","name":"_id","original":{"line":12,"column":12},"generated":{"line":40,"column":12}},{"source":"../BIMObject.js","name":null,"original":{"line":11,"column":20},"generated":{"line":40,"column":15}},{"source":"../BIMObject.js","name":"name","original":{"line":13,"column":8},"generated":{"line":41,"column":0}},{"source":"../BIMObject.js","name":"name","original":{"line":13,"column":8},"generated":{"line":41,"column":8}},{"source":"../BIMObject.js","name":"name","original":{"line":13,"column":8},"generated":{"line":41,"column":12}},{"source":"../BIMObject.js","name":"_name","original":{"line":13,"column":14},"generated":{"line":41,"column":14}},{"source":"../BIMObject.js","name":null,"original":{"line":11,"column":20},"generated":{"line":42,"column":0}},{"source":"../BIMObject.js","name":null,"original":{"line":11,"column":6},"generated":{"line":42,"column":7}},{"source":"../BIMObject.js","name":null,"original":{"line":15,"column":5},"generated":{"line":43,"column":0}},{"source":"../BIMObject.js","name":null,"original":{"line":8,"column":26},"generated":{"line":45,"column":0}},{"source":"../BIMObject.js","name":null,"original":{"line":16,"column":3},"generated":{"line":46,"column":0}},{"source":"../BIMObject.js","name":"globalType","original":{"line":7,"column":30},"generated":{"line":49,"column":2}},{"source":"../BIMObject.js","name":"globalType","original":{"line":7,"column":30},"generated":{"line":49,"column":12}},{"source":"../BIMObject.js","name":"Model","original":{"line":7,"column":41},"generated":{"line":49,"column":13}},{"source":"../BIMObject.js","name":"SpinalBIMObject","original":{"line":20,"column":15},"generated":{"line":51,"column":18}},{"source":"../BIMObject.js","name":"spinalCore","original":{"line":21,"column":0},"generated":{"line":52,"column":0}},{"source":"../BIMObject.js","name":"spinalCore","original":{"line":21,"column":0},"generated":{"line":52,"column":10}},{"source":"../BIMObject.js","name":"register_models","original":{"line":21,"column":11},"generated":{"line":52,"column":11}},{"source":"../BIMObject.js","name":"spinalCore","original":{"line":21,"column":0},"generated":{"line":52,"column":26}},{"source":"../BIMObject.js","name":null,"original":{"line":21,"column":27},"generated":{"line":52,"column":27}},{"source":"../BIMObject.js","name":"SpinalBIMObject","original":{"line":21,"column":28},"generated":{"line":52,"column":28}},{"source":"../BIMObject.js","name":null,"original":{"line":21,"column":27},"generated":{"line":52,"column":43}},{"source":"../BIMObject.js","name":"spinalCore","original":{"line":21,"column":0},"generated":{"line":52,"column":44}}],"sources":{"../BIMObject.js":"const spinalCore = require(\"spinal-core-connectorjs\");\nconst globalType = typeof window === \"undefined\" ? global : window;\n\n\n\n\nclass SpinalBIMObject extends globalType.Model {\n  constructor(_id, _name) {\n    super();\n    if (FileSystem._sig_server) {\n      this.add_attr({\n        id: _id,\n        name: _name\n      });\n    }\n  }\n}\n\n\nexport default SpinalBIMObject;\nspinalCore.register_models([SpinalBIMObject]);"},"lineCount":null}},"error":null,"hash":"9d44404369fc499309d927ea933154bb","cacheData":{"env":{}}}